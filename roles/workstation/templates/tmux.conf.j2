unbind C-b
set -g prefix C-a
bind C-a send-prefix

set -g history-limit 100000

setw -g aggressive-resize on

set -g set-titles on
set -g set-titles-string "#S"

set -g monitor-activity on
set -g visual-activity on

set -g terminal-overrides 'xterm*:smcup@:rmcup@'
set -g default-terminal "screen-256color"
set -sg escape-time 10

set -g mouse on

set-option -g base-index 1
set-window-option -g pane-base-index 1

unbind-key j
unbind-key k
unbind-key h
unbind-key l
bind-key j select-pane -D
bind-key k select-pane -U
bind-key h select-pane -L
bind-key l select-pane -R

# Copy-paste
{% if ansible_os_family == "Darwin" %}
bind-key -T copy-mode-vi enter send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
bind-key p run-shell "reattach-to-user-namespace pbpaste | tmux load-buffer - ; tmux paste-buffer"
{% else %}
bind-key -T copy-mode-vi enter send -X copy-pipe-and-cancel "xclip -selection clipboard -i"
bind-key p run-shell "xclip -sel clip -o | tmux load-buffer - ; tmux paste-buffer"
{% endif %}

# Smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'

{% if ansible_os_family == "Darwin" %}
bind -n C-h if-shell "$is_vim" "send-keys Escape '[104;5u'" "select-pane -L"
{% else %}
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
{% endif %}
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind C-l send-keys 'C-l'

set -g status-bg black
set -g status-fg white
set -g status-interval 5
set -g status-left-length 90
set -g status-right-length 60
set -g status-left "#[fg=blue]#h #[fg=white]"
set -g status-justify left
set -g status-right '#[fg=Cyan]#S'
